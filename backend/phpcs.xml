<?xml version="1.0"?>

<ruleset name="Laravel Standards">

    <!--
    The name attribute of the ruleset tag is displayed
    when running PHP_CodeSniffer with the -v command line
    argument. The description tag below is not displayed anywhere
    except in this file, so it can contain information for
    developers who may change this file in the future.
-->
    <description>The Laravel Coding Standards</description>

    <!-- check all files in the app directory, feel free to add more files with:
    <file>FOLDER NAME</file>
-->
    <file>app</file>
    <file>config</file>
    <file>public</file>
    <file>resources</file>
    <file>routes</file>
    <file>tests</file>

    <!-- exclude directories from the violation check-->
    <exclude-pattern>*/migrations/*</exclude-pattern>
    <exclude-pattern>*/cache/*</exclude-pattern>
    <exclude-pattern>*/*_ide_*</exclude-pattern>
    <exclude-pattern>*/*.js</exclude-pattern>
    <exclude-pattern>*/*.css</exclude-pattern>
    <exclude-pattern>*/*.xml</exclude-pattern>
    <exclude-pattern>*/*.blade.php</exclude-pattern>
    <exclude-pattern>*/autoload.php</exclude-pattern>
    <exclude-pattern>*/storage/*</exclude-pattern>
    <exclude-pattern>*/docs/*</exclude-pattern>
    <exclude-pattern>*/vendor/*</exclude-pattern>

    <!--
    You can hard-code command line values into your custom standard.
    Note that this does not work for the command line values:
    -v[v][v], -l, -d, -sniffs and -standard
    The following tags are equivalent to the command line arguments:
    -p
-->
    <arg name="report" value="summary"/>
    <arg name="colors"/>
    <arg value="p"/>

    <!-- Our base rule: set to PSR12-->
    <rule ref="PSR12"/>

</ruleset>
